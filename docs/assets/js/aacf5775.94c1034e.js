"use strict";(self.webpackChunksync_powershell=self.webpackChunksync_powershell||[]).push([[140,706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||r;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));const r={slug:"/ADR006",title:"ADR006 Deploy",tags:["ADR"]},l=void 0,i={unversionedId:"ADR/ADR006",id:"ADR/ADR006",title:"ADR006 Deploy",description:"TITLE: ADR 006 - Deploy",source:"@site/docs/ADR/ADR006.md",sourceDirName:"ADR",slug:"/ADR006",permalink:"/help/docs/ADR006",draft:!1,tags:[{label:"ADR",permalink:"/help/docs/tags/adr"}],version:"current",frontMatter:{slug:"/ADR006",title:"ADR006 Deploy",tags:["ADR"]},sidebar:"tutorialSidebar",previous:{title:"ADR005 Logging",permalink:"/help/docs/ADR005"},next:{title:"ADR007 Exception Handling",permalink:"/help/docs/ADR007"}},s={},d=[{value:"TITLE: ADR 006 - Deploy",id:"title-adr-006---deploy",level:2},{value:"Where and how to deploy",id:"where-and-how-to-deploy",level:2},{value:"Status",id:"status",level:2},{value:"Evaluation criteria",id:"evaluation-criteria",level:2},{value:"Candidates to consider",id:"candidates-to-consider",level:2},{value:"Research and analysis of each candidate",id:"research-and-analysis-of-each-candidate",level:2},{value:"Recommendation",id:"recommendation",level:2},{value:"ADR based on",id:"adr-based-on",level:2}],u={toc:d},p="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"title-adr-006---deploy"},"TITLE: ADR 006 - Deploy"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Title"),(0,o.kt)("li",{parentName:"ul"},"Status"),(0,o.kt)("li",{parentName:"ul"},"Evaluation criteria"),(0,o.kt)("li",{parentName:"ul"},"Candidates to consider"),(0,o.kt)("li",{parentName:"ul"},"Research and analysis of each candidate",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Does/doesn't meet criteria and why"),(0,o.kt)("li",{parentName:"ul"},"Cost analysis"),(0,o.kt)("li",{parentName:"ul"},"SWOT analysis"),(0,o.kt)("li",{parentName:"ul"},"Opinions and feedback"))),(0,o.kt)("li",{parentName:"ul"},"Recommendation")),(0,o.kt)("h2",{id:"where-and-how-to-deploy"},"Where and how to deploy"),(0,o.kt)("p",null,"The deployment could be done automatically or manually. "),(0,o.kt)("p",null,"The deployment could be on a cloud provider or on premise or on a hosted server."),(0,o.kt)("p",null,"For automatically, the easy solution is a Github Action because the code is on Github."),(0,o.kt)("h2",{id:"status"},"Status"),(0,o.kt)("p",null,"Accepted "),(0,o.kt)("h2",{id:"evaluation-criteria"},"Evaluation criteria"),(0,o.kt)("p",null,"Low cost - 10000"),(0,o.kt)("p",null,"Easy of deployment - 10 "),(0,o.kt)("p",null,"Easy of maintenance - 10"),(0,o.kt)("p",null,"Easy of monitoring - 10"),(0,o.kt)("p",null,"Easy of scaling - 10"),(0,o.kt)("p",null,"Easy of rollback - 10"),(0,o.kt)("h2",{id:"candidates-to-consider"},"Candidates to consider"),(0,o.kt)("p",null,"Amazon "),(0,o.kt)("p",null,"Azure"),(0,o.kt)("p",null,"Hosted Server"),(0,o.kt)("h2",{id:"research-and-analysis-of-each-candidate"},"Research and analysis of each candidate"),(0,o.kt)("p",null,"Because of having a sponsored account on Azure, Azure is the first candidate to consider."),(0,o.kt)("p",null,"Also, Github Actions is integrated with Azure."),(0,o.kt)("h2",{id:"recommendation"},"Recommendation"),(0,o.kt)("p",null,"Azure"),(0,o.kt)("h2",{id:"adr-based-on"},"ADR based on"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/joelparkerhenderson/architecture-decision-record/blob/main/locales/en/templates/decision-record-template-for-business-case/index.md"},"https://github.com/joelparkerhenderson/architecture-decision-record/blob/main/locales/en/templates/decision-record-template-for-business-case/index.md")))}c.isMDXComponent=!0},719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(7462),o=(n(7294),n(3905)),r=n(9987);const l={},i="Added deployment",s={permalink:"/help/blog/2023/10/30/index",source:"@site/blog/2023-10-30/index.md",title:"Added deployment",description:"After this ADR",date:"2023-10-30T00:00:00.000Z",formattedDate:"October 30, 2023",tags:[],readingTime:1.27,hasTruncateMarker:!0,authors:[],frontMatter:{},prevItem:{title:"Added deployment",permalink:"/help/blog/2023/10/31/index"},nextItem:{title:"Added versioning",permalink:"/help/blog/2023/10/29/index"}},d={authorsImageUrls:[]},u=[],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After this ADR "),(0,o.kt)("hr",null),(0,o.kt)(r.default,{mdxType:"ADR006"}),(0,o.kt)("hr",null),(0,o.kt)("p",null,"It was just creating the WebApp on Azure and letting generate the Github Action."),(0,o.kt)("p",null,"Now the only thing that I need to do is to integrate the documentation on wwwroot."),(0,o.kt)("p",null,"I have an Github workflow that is building the documentation and the site and running the tests."),(0,o.kt)("p",null,"The other Github file is taking the output of the build and deploying it to Azure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy\n# More GitHub Actions for Azure: https://github.com/Azure/actions\n\nname: Build and deploy ASP.Net Core app to Azure Web App - syncPowershell\n\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n  \njobs:\n  mainBuild:\n    uses: ./.github/workflows/build.yml \n  build:\n    needs: [mainBuild]\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Set up .NET Core\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 7.0.x\n          include-prerelease: false\n\n      # - name: Build with dotnet\n      #   run: |\n      #       cd src\n      #       cd SyncPowershell\n      #       dotnet build --configuration Release\n      - name: Download artifact from build job\n        uses: actions/download-artifact@v3\n        with:\n          name: docusaurusBuild\n          path: src/SyncPowershell/syncPowershellWebAPI/wwwroot/help/\n\n      - name: dotnet publish\n        run: |\n            cd src\n            cd SyncPowershell\n            cd syncPowershellWebAPI\n            dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp\n\n      - name: Upload artifact for deployment job\n        uses: actions/upload-artifact@v3\n        with:\n          name: .net-app\n          path: ${{env.DOTNET_ROOT}}/myapp\n          retention-days: 1\n\n  deploy:\n    runs-on: ubuntu-latest\n    needs: build\n    environment:\n      name: 'Production'\n      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}\n\n    steps:\n      - name: Download artifact from build job\n        uses: actions/download-artifact@v3\n        with:\n          name: .net-app\n\n      - name: Deploy to Azure Web App\n        id: deploy-to-webapp\n        uses: azure/webapps-deploy@v2\n        with:\n          app-name: 'syncPowershell'\n          slot-name: 'Production'\n          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_49083FF1076F49D1AE72DCB84FCB1E50 }}\n          package: .\n\n")))}m.isMDXComponent=!0}}]);